{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 26,
    "pending": 0,
    "failures": 15,
    "start": "2022-02-16T02:27:42.046Z",
    "end": "2022-02-16T02:29:04.706Z",
    "duration": 82660,
    "testsRegistered": 41,
    "passPercent": 63.41463414634146,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "445d2a7a-3c60-4971-8c86-bcdbff58b5d2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "25c9c483-65e9-4a4e-8a73-eb5eaedbc6ce",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "90a6a6fa-1b66-4712-8b5b-1a76bc5dfff1",
              "parentUUID": "25c9c483-65e9-4a4e-8a73-eb5eaedbc6ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90a6a6fa-1b66-4712-8b5b-1a76bc5dfff1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "4a4787cc-b301-4ec0-866a-addcc34868fe",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "af18ecdc-22f7-4542-bc43-2c5a627bf87a",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "159495d6-0c77-4614-b9a3-a69963aa986a",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "01f86da0-acd6-41b6-a0bc-3f6a214eb3f1",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "5f3848ed-9e29-46e1-aaa4-ce96e59c0c3d",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "483cf733-802c-4f78-95d3-26966391bca5",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2f66ce3f-aaab-4c24-bcb7-a7bd80aa3e56",
              "parentUUID": "7b2f7f2f-16e2-47a2-b863-35f3c65d60f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a4787cc-b301-4ec0-866a-addcc34868fe",
            "af18ecdc-22f7-4542-bc43-2c5a627bf87a",
            "159495d6-0c77-4614-b9a3-a69963aa986a",
            "01f86da0-acd6-41b6-a0bc-3f6a214eb3f1",
            "5f3848ed-9e29-46e1-aaa4-ce96e59c0c3d",
            "483cf733-802c-4f78-95d3-26966391bca5",
            "2f66ce3f-aaab-4c24-bcb7-a7bd80aa3e56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c6746ef-db56-4771-bfde-339d3cd7e3bd",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9bd3fd3d-c70b-4c7f-b919-c7bf1ab73d88",
              "parentUUID": "3c6746ef-db56-4771-bfde-339d3cd7e3bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "44a7532d-b977-48b7-b84d-fabe61587b0f",
              "parentUUID": "3c6746ef-db56-4771-bfde-339d3cd7e3bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bd3fd3d-c70b-4c7f-b919-c7bf1ab73d88",
            "44a7532d-b977-48b7-b84d-fabe61587b0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "653fbea1-670b-4b9f-a0b3-61a407570be0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 4198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<section#pixel-board>' to be 'visible'\n\nThis element '<section#pixel-board>' is not visible because it has an effective width and height of: '270 x 0' pixels.",
                "estack": "CypressError: Timed out retrying: expected '<section#pixel-board>' to be 'visible'\n\nThis element '<section#pixel-board>' is not visible because it has an effective width and height of: '270 x 0' pixels.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "48df04f5-b949-4c51-9dfd-b0ec1ec9fdb0",
              "parentUUID": "653fbea1-670b-4b9f-a0b3-61a407570be0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7119d50f-7f26-48db-99d3-a71e86d83731",
              "parentUUID": "653fbea1-670b-4b9f-a0b3-61a407570be0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "0847ebea-d69e-4a20-aa7e-13e1f2d47289",
              "parentUUID": "653fbea1-670b-4b9f-a0b3-61a407570be0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b3bce3b7-8510-46f3-81df-3db27323cb60",
              "parentUUID": "653fbea1-670b-4b9f-a0b3-61a407570be0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7119d50f-7f26-48db-99d3-a71e86d83731",
            "0847ebea-d69e-4a20-aa7e-13e1f2d47289",
            "b3bce3b7-8510-46f3-81df-3db27323cb60"
          ],
          "failures": [
            "48df04f5-b949-4c51-9dfd-b0ec1ec9fdb0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a6f7590-c85f-43ff-894a-1c4ae9933b47",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "140951ea-5ba7-4106-876a-9be5a2232063",
              "parentUUID": "7a6f7590-c85f-43ff-894a-1c4ae9933b47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e32e3a5f-7c00-4720-bb0e-78743ddfe56f",
              "parentUUID": "7a6f7590-c85f-43ff-894a-1c4ae9933b47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "140951ea-5ba7-4106-876a-9be5a2232063",
            "e32e3a5f-7c00-4720-bb0e-78743ddfe56f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c52d4117-3406-4ceb-aeb7-5e3eee822577",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3b5c3d06-a627-4199-8f56-c0310bc4a8ca",
              "parentUUID": "c52d4117-3406-4ceb-aeb7-5e3eee822577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "300dc433-d91d-400e-b97d-0ae8df0d1d42",
              "parentUUID": "c52d4117-3406-4ceb-aeb7-5e3eee822577",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b5c3d06-a627-4199-8f56-c0310bc4a8ca",
            "300dc433-d91d-400e-b97d-0ae8df0d1d42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a094c33-d01f-4f57-bdee-9edff9918c97",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "3b40ed1d-095f-4fd9-99a8-bb12d2b5fb69",
              "parentUUID": "3a094c33-d01f-4f57-bdee-9edff9918c97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "8585271a-23f5-4d00-a2f8-e5641aa0898e",
              "parentUUID": "3a094c33-d01f-4f57-bdee-9edff9918c97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b40ed1d-095f-4fd9-99a8-bb12d2b5fb69",
            "8585271a-23f5-4d00-a2f8-e5641aa0898e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9294,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b1773102-7db6-4dff-ac74-c49180094400",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "734d5011-636c-4c30-a9a6-4ee9ab619a9b",
              "parentUUID": "b1773102-7db6-4dff-ac74-c49180094400",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0a16c11d-51b3-4c51-92c3-fc94f81c6bfd",
              "parentUUID": "b1773102-7db6-4dff-ac74-c49180094400",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "0ba3288c-9096-4b5b-9299-88dd03a719ad",
              "parentUUID": "b1773102-7db6-4dff-ac74-c49180094400",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "734d5011-636c-4c30-a9a6-4ee9ab619a9b",
            "0a16c11d-51b3-4c51-92c3-fc94f81c6bfd",
            "0ba3288c-9096-4b5b-9299-88dd03a719ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80edeedd-0f3a-4e9d-98be-f0fd430b44ba",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6fff3b7f-40b0-4b48-b072-27a69d193b80",
              "parentUUID": "80edeedd-0f3a-4e9d-98be-f0fd430b44ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "26ad60d3-05fc-4600-b9a0-44975d2b57cb",
              "parentUUID": "80edeedd-0f3a-4e9d-98be-f0fd430b44ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "5f991f7a-4eac-4608-a999-7ebdd0528844",
              "parentUUID": "80edeedd-0f3a-4e9d-98be-f0fd430b44ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c01b4aae-8813-41ff-8a4b-c62aa318e100",
              "parentUUID": "80edeedd-0f3a-4e9d-98be-f0fd430b44ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6fff3b7f-40b0-4b48-b072-27a69d193b80",
            "26ad60d3-05fc-4600-b9a0-44975d2b57cb",
            "5f991f7a-4eac-4608-a999-7ebdd0528844",
            "c01b4aae-8813-41ff-8a4b-c62aa318e100"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2649,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4229,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bb30c19e-aa56-4005-8e05-660f58fb8540",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "341ced36-8718-446b-b680-0af883fd0de7",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be6f00ba-3e0d-4138-926d-26a15e6c35b3",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9753f834-9447-4bcf-a644-f85f0a6e4536",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4277,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f60a684d-acd8-4cc6-9afc-8fb7daf6aeb6",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5f92af58-c171-4f4a-8e48-b697aa0c398f",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b00b2185-9356-4883-9a60-8e2277346aef",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2404c3f7-ac77-4df3-bf8a-a46a14cc6ce1",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a115ff33-857c-46a4-aef9-26d71d2d8dbc",
              "parentUUID": "2854b566-dba9-4a1a-ad82-cb52151f19b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bb30c19e-aa56-4005-8e05-660f58fb8540",
            "341ced36-8718-446b-b680-0af883fd0de7",
            "be6f00ba-3e0d-4138-926d-26a15e6c35b3",
            "9753f834-9447-4bcf-a644-f85f0a6e4536",
            "f60a684d-acd8-4cc6-9afc-8fb7daf6aeb6",
            "5f92af58-c171-4f4a-8e48-b697aa0c398f",
            "b00b2185-9356-4883-9a60-8e2277346aef",
            "2404c3f7-ac77-4df3-bf8a-a46a14cc6ce1",
            "a115ff33-857c-46a4-aef9-26d71d2d8dbc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7109142f-db68-42cc-b94d-4e1685ce5fb8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec8da0fb-8be6-4506-a194-69d7dc5ecc57",
              "parentUUID": "7109142f-db68-42cc-b94d-4e1685ce5fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c47ca7b-96e3-49ec-b407-bbd6cf74d835",
              "parentUUID": "7109142f-db68-42cc-b94d-4e1685ce5fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34073/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34073/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34073/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34073/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34073/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34073/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8e2c4879-db71-4524-b072-b00c289bec8b",
              "parentUUID": "7109142f-db68-42cc-b94d-4e1685ce5fb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ec8da0fb-8be6-4506-a194-69d7dc5ecc57",
            "7c47ca7b-96e3-49ec-b407-bbd6cf74d835",
            "8e2c4879-db71-4524-b072-b00c289bec8b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12848,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59400464-cce2-47eb-b122-efff316a9469",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34073/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34073/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34073/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34073/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34073/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34073/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34073/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "534bba18-5cae-4c84-b94e-35163d1cf74a",
              "parentUUID": "59400464-cce2-47eb-b122-efff316a9469",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34073/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34073/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34073/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34073/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34073/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34073/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34073/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34073/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34073/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34073/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34073/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34073/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "70d904bd-4ad3-4444-bc41-97048f2f68c8",
              "parentUUID": "59400464-cce2-47eb-b122-efff316a9469",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "534bba18-5cae-4c84-b94e-35163d1cf74a",
            "70d904bd-4ad3-4444-bc41-97048f2f68c8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}